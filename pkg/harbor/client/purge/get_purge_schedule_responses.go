// Code generated by go-swagger; DO NOT EDIT.

package purge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/goharbor/xk6-harbor/pkg/harbor/models"
)

// GetPurgeScheduleReader is a Reader for the GetPurgeSchedule structure.
type GetPurgeScheduleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPurgeScheduleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPurgeScheduleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPurgeScheduleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPurgeScheduleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPurgeScheduleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /system/purgeaudit/schedule] getPurgeSchedule", response, response.Code())
	}
}

// NewGetPurgeScheduleOK creates a GetPurgeScheduleOK with default headers values
func NewGetPurgeScheduleOK() *GetPurgeScheduleOK {
	return &GetPurgeScheduleOK{}
}

/*
GetPurgeScheduleOK describes a response with status code 200, with default header values.

Get purge job's schedule.
*/
type GetPurgeScheduleOK struct {
	Payload *models.ExecHistory
}

// IsSuccess returns true when this get purge schedule o k response has a 2xx status code
func (o *GetPurgeScheduleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get purge schedule o k response has a 3xx status code
func (o *GetPurgeScheduleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get purge schedule o k response has a 4xx status code
func (o *GetPurgeScheduleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get purge schedule o k response has a 5xx status code
func (o *GetPurgeScheduleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get purge schedule o k response a status code equal to that given
func (o *GetPurgeScheduleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get purge schedule o k response
func (o *GetPurgeScheduleOK) Code() int {
	return 200
}

func (o *GetPurgeScheduleOK) Error() string {
	return fmt.Sprintf("[GET /system/purgeaudit/schedule][%d] getPurgeScheduleOK  %+v", 200, o.Payload)
}

func (o *GetPurgeScheduleOK) String() string {
	return fmt.Sprintf("[GET /system/purgeaudit/schedule][%d] getPurgeScheduleOK  %+v", 200, o.Payload)
}

func (o *GetPurgeScheduleOK) GetPayload() *models.ExecHistory {
	return o.Payload
}

func (o *GetPurgeScheduleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExecHistory)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPurgeScheduleUnauthorized creates a GetPurgeScheduleUnauthorized with default headers values
func NewGetPurgeScheduleUnauthorized() *GetPurgeScheduleUnauthorized {
	return &GetPurgeScheduleUnauthorized{}
}

/*
GetPurgeScheduleUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetPurgeScheduleUnauthorized struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this get purge schedule unauthorized response has a 2xx status code
func (o *GetPurgeScheduleUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get purge schedule unauthorized response has a 3xx status code
func (o *GetPurgeScheduleUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get purge schedule unauthorized response has a 4xx status code
func (o *GetPurgeScheduleUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get purge schedule unauthorized response has a 5xx status code
func (o *GetPurgeScheduleUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get purge schedule unauthorized response a status code equal to that given
func (o *GetPurgeScheduleUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get purge schedule unauthorized response
func (o *GetPurgeScheduleUnauthorized) Code() int {
	return 401
}

func (o *GetPurgeScheduleUnauthorized) Error() string {
	return fmt.Sprintf("[GET /system/purgeaudit/schedule][%d] getPurgeScheduleUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPurgeScheduleUnauthorized) String() string {
	return fmt.Sprintf("[GET /system/purgeaudit/schedule][%d] getPurgeScheduleUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPurgeScheduleUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetPurgeScheduleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPurgeScheduleForbidden creates a GetPurgeScheduleForbidden with default headers values
func NewGetPurgeScheduleForbidden() *GetPurgeScheduleForbidden {
	return &GetPurgeScheduleForbidden{}
}

/*
GetPurgeScheduleForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetPurgeScheduleForbidden struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this get purge schedule forbidden response has a 2xx status code
func (o *GetPurgeScheduleForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get purge schedule forbidden response has a 3xx status code
func (o *GetPurgeScheduleForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get purge schedule forbidden response has a 4xx status code
func (o *GetPurgeScheduleForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get purge schedule forbidden response has a 5xx status code
func (o *GetPurgeScheduleForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get purge schedule forbidden response a status code equal to that given
func (o *GetPurgeScheduleForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get purge schedule forbidden response
func (o *GetPurgeScheduleForbidden) Code() int {
	return 403
}

func (o *GetPurgeScheduleForbidden) Error() string {
	return fmt.Sprintf("[GET /system/purgeaudit/schedule][%d] getPurgeScheduleForbidden  %+v", 403, o.Payload)
}

func (o *GetPurgeScheduleForbidden) String() string {
	return fmt.Sprintf("[GET /system/purgeaudit/schedule][%d] getPurgeScheduleForbidden  %+v", 403, o.Payload)
}

func (o *GetPurgeScheduleForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetPurgeScheduleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPurgeScheduleInternalServerError creates a GetPurgeScheduleInternalServerError with default headers values
func NewGetPurgeScheduleInternalServerError() *GetPurgeScheduleInternalServerError {
	return &GetPurgeScheduleInternalServerError{}
}

/*
GetPurgeScheduleInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetPurgeScheduleInternalServerError struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this get purge schedule internal server error response has a 2xx status code
func (o *GetPurgeScheduleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get purge schedule internal server error response has a 3xx status code
func (o *GetPurgeScheduleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get purge schedule internal server error response has a 4xx status code
func (o *GetPurgeScheduleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get purge schedule internal server error response has a 5xx status code
func (o *GetPurgeScheduleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get purge schedule internal server error response a status code equal to that given
func (o *GetPurgeScheduleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get purge schedule internal server error response
func (o *GetPurgeScheduleInternalServerError) Code() int {
	return 500
}

func (o *GetPurgeScheduleInternalServerError) Error() string {
	return fmt.Sprintf("[GET /system/purgeaudit/schedule][%d] getPurgeScheduleInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPurgeScheduleInternalServerError) String() string {
	return fmt.Sprintf("[GET /system/purgeaudit/schedule][%d] getPurgeScheduleInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPurgeScheduleInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetPurgeScheduleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
