// Code generated by go-swagger; DO NOT EDIT.

package purge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/goharbor/xk6-harbor/pkg/harbor/models"
)

// GetPurgeJobLogReader is a Reader for the GetPurgeJobLog structure.
type GetPurgeJobLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPurgeJobLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPurgeJobLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPurgeJobLogBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPurgeJobLogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPurgeJobLogForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPurgeJobLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPurgeJobLogInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /system/purgeaudit/{purge_id}/log] getPurgeJobLog", response, response.Code())
	}
}

// NewGetPurgeJobLogOK creates a GetPurgeJobLogOK with default headers values
func NewGetPurgeJobLogOK() *GetPurgeJobLogOK {
	return &GetPurgeJobLogOK{}
}

/*
GetPurgeJobLogOK describes a response with status code 200, with default header values.

Get successfully.
*/
type GetPurgeJobLogOK struct {
	Payload string
}

// IsSuccess returns true when this get purge job log o k response has a 2xx status code
func (o *GetPurgeJobLogOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get purge job log o k response has a 3xx status code
func (o *GetPurgeJobLogOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get purge job log o k response has a 4xx status code
func (o *GetPurgeJobLogOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get purge job log o k response has a 5xx status code
func (o *GetPurgeJobLogOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get purge job log o k response a status code equal to that given
func (o *GetPurgeJobLogOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get purge job log o k response
func (o *GetPurgeJobLogOK) Code() int {
	return 200
}

func (o *GetPurgeJobLogOK) Error() string {
	return fmt.Sprintf("[GET /system/purgeaudit/{purge_id}/log][%d] getPurgeJobLogOK  %+v", 200, o.Payload)
}

func (o *GetPurgeJobLogOK) String() string {
	return fmt.Sprintf("[GET /system/purgeaudit/{purge_id}/log][%d] getPurgeJobLogOK  %+v", 200, o.Payload)
}

func (o *GetPurgeJobLogOK) GetPayload() string {
	return o.Payload
}

func (o *GetPurgeJobLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPurgeJobLogBadRequest creates a GetPurgeJobLogBadRequest with default headers values
func NewGetPurgeJobLogBadRequest() *GetPurgeJobLogBadRequest {
	return &GetPurgeJobLogBadRequest{}
}

/*
GetPurgeJobLogBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetPurgeJobLogBadRequest struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this get purge job log bad request response has a 2xx status code
func (o *GetPurgeJobLogBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get purge job log bad request response has a 3xx status code
func (o *GetPurgeJobLogBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get purge job log bad request response has a 4xx status code
func (o *GetPurgeJobLogBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get purge job log bad request response has a 5xx status code
func (o *GetPurgeJobLogBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get purge job log bad request response a status code equal to that given
func (o *GetPurgeJobLogBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get purge job log bad request response
func (o *GetPurgeJobLogBadRequest) Code() int {
	return 400
}

func (o *GetPurgeJobLogBadRequest) Error() string {
	return fmt.Sprintf("[GET /system/purgeaudit/{purge_id}/log][%d] getPurgeJobLogBadRequest  %+v", 400, o.Payload)
}

func (o *GetPurgeJobLogBadRequest) String() string {
	return fmt.Sprintf("[GET /system/purgeaudit/{purge_id}/log][%d] getPurgeJobLogBadRequest  %+v", 400, o.Payload)
}

func (o *GetPurgeJobLogBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetPurgeJobLogBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPurgeJobLogUnauthorized creates a GetPurgeJobLogUnauthorized with default headers values
func NewGetPurgeJobLogUnauthorized() *GetPurgeJobLogUnauthorized {
	return &GetPurgeJobLogUnauthorized{}
}

/*
GetPurgeJobLogUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetPurgeJobLogUnauthorized struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this get purge job log unauthorized response has a 2xx status code
func (o *GetPurgeJobLogUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get purge job log unauthorized response has a 3xx status code
func (o *GetPurgeJobLogUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get purge job log unauthorized response has a 4xx status code
func (o *GetPurgeJobLogUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get purge job log unauthorized response has a 5xx status code
func (o *GetPurgeJobLogUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get purge job log unauthorized response a status code equal to that given
func (o *GetPurgeJobLogUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get purge job log unauthorized response
func (o *GetPurgeJobLogUnauthorized) Code() int {
	return 401
}

func (o *GetPurgeJobLogUnauthorized) Error() string {
	return fmt.Sprintf("[GET /system/purgeaudit/{purge_id}/log][%d] getPurgeJobLogUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPurgeJobLogUnauthorized) String() string {
	return fmt.Sprintf("[GET /system/purgeaudit/{purge_id}/log][%d] getPurgeJobLogUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPurgeJobLogUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetPurgeJobLogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPurgeJobLogForbidden creates a GetPurgeJobLogForbidden with default headers values
func NewGetPurgeJobLogForbidden() *GetPurgeJobLogForbidden {
	return &GetPurgeJobLogForbidden{}
}

/*
GetPurgeJobLogForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetPurgeJobLogForbidden struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this get purge job log forbidden response has a 2xx status code
func (o *GetPurgeJobLogForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get purge job log forbidden response has a 3xx status code
func (o *GetPurgeJobLogForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get purge job log forbidden response has a 4xx status code
func (o *GetPurgeJobLogForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get purge job log forbidden response has a 5xx status code
func (o *GetPurgeJobLogForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get purge job log forbidden response a status code equal to that given
func (o *GetPurgeJobLogForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get purge job log forbidden response
func (o *GetPurgeJobLogForbidden) Code() int {
	return 403
}

func (o *GetPurgeJobLogForbidden) Error() string {
	return fmt.Sprintf("[GET /system/purgeaudit/{purge_id}/log][%d] getPurgeJobLogForbidden  %+v", 403, o.Payload)
}

func (o *GetPurgeJobLogForbidden) String() string {
	return fmt.Sprintf("[GET /system/purgeaudit/{purge_id}/log][%d] getPurgeJobLogForbidden  %+v", 403, o.Payload)
}

func (o *GetPurgeJobLogForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetPurgeJobLogForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPurgeJobLogNotFound creates a GetPurgeJobLogNotFound with default headers values
func NewGetPurgeJobLogNotFound() *GetPurgeJobLogNotFound {
	return &GetPurgeJobLogNotFound{}
}

/*
GetPurgeJobLogNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetPurgeJobLogNotFound struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this get purge job log not found response has a 2xx status code
func (o *GetPurgeJobLogNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get purge job log not found response has a 3xx status code
func (o *GetPurgeJobLogNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get purge job log not found response has a 4xx status code
func (o *GetPurgeJobLogNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get purge job log not found response has a 5xx status code
func (o *GetPurgeJobLogNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get purge job log not found response a status code equal to that given
func (o *GetPurgeJobLogNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get purge job log not found response
func (o *GetPurgeJobLogNotFound) Code() int {
	return 404
}

func (o *GetPurgeJobLogNotFound) Error() string {
	return fmt.Sprintf("[GET /system/purgeaudit/{purge_id}/log][%d] getPurgeJobLogNotFound  %+v", 404, o.Payload)
}

func (o *GetPurgeJobLogNotFound) String() string {
	return fmt.Sprintf("[GET /system/purgeaudit/{purge_id}/log][%d] getPurgeJobLogNotFound  %+v", 404, o.Payload)
}

func (o *GetPurgeJobLogNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetPurgeJobLogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPurgeJobLogInternalServerError creates a GetPurgeJobLogInternalServerError with default headers values
func NewGetPurgeJobLogInternalServerError() *GetPurgeJobLogInternalServerError {
	return &GetPurgeJobLogInternalServerError{}
}

/*
GetPurgeJobLogInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetPurgeJobLogInternalServerError struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this get purge job log internal server error response has a 2xx status code
func (o *GetPurgeJobLogInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get purge job log internal server error response has a 3xx status code
func (o *GetPurgeJobLogInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get purge job log internal server error response has a 4xx status code
func (o *GetPurgeJobLogInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get purge job log internal server error response has a 5xx status code
func (o *GetPurgeJobLogInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get purge job log internal server error response a status code equal to that given
func (o *GetPurgeJobLogInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get purge job log internal server error response
func (o *GetPurgeJobLogInternalServerError) Code() int {
	return 500
}

func (o *GetPurgeJobLogInternalServerError) Error() string {
	return fmt.Sprintf("[GET /system/purgeaudit/{purge_id}/log][%d] getPurgeJobLogInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPurgeJobLogInternalServerError) String() string {
	return fmt.Sprintf("[GET /system/purgeaudit/{purge_id}/log][%d] getPurgeJobLogInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPurgeJobLogInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetPurgeJobLogInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
