// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserCreationReq user creation req
//
// swagger:model UserCreationReq
type UserCreationReq struct {

	// comment
	Comment string `json:"comment,omitempty" js:"comment"`

	// email
	// Max Length: 255
	Email string `json:"email,omitempty" js:"email"`

	// password
	Password string `json:"password,omitempty" js:"password"`

	// realname
	Realname string `json:"realname,omitempty" js:"realname"`

	// username
	// Max Length: 255
	Username string `json:"username,omitempty" js:"username"`
}

// Validate validates this user creation req
func (m *UserCreationReq) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUsername(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserCreationReq) validateEmail(formats strfmt.Registry) error {
	if swag.IsZero(m.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("email", "body", m.Email, 255); err != nil {
		return err
	}

	return nil
}

func (m *UserCreationReq) validateUsername(formats strfmt.Registry) error {
	if swag.IsZero(m.Username) { // not required
		return nil
	}

	if err := validate.MaxLength("username", "body", m.Username, 255); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this user creation req based on context it is used
func (m *UserCreationReq) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UserCreationReq) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserCreationReq) UnmarshalBinary(b []byte) error {
	var res UserCreationReq
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
